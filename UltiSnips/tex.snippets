global !p
def math():
	result = vim.eval('vimtex#syntax#in_mathzone()') == '1'
	print("In math zone:", result)
	return result

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def InMatrix():
    result = vim.eval("vimtex#env#is_inside('pmatrix')")
    is_inside = result[0] == '1'
    env_name = result[1]
    print("Inside matrix environment:", is_inside and env_name == 'pmatrix')
    return is_inside and env_name == 'pmatrix'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

snippet template "Basic template" b
\documentclass[11pt]{article}
\usepackage{amsmath,amssymb,amsthm}
\usepackage{graphicx}
\usepackage[utf8]{inputenc}
\usepackage[margin=1in]{geometry}
\usepackage{fancyhdr}
\usepackage{courier}
\usepackage{pgfplots}
\usepackage{mathtools}
\setlength{\parindent}{0pt}
\setlength{\parskip}{5pt plus 1pt}
\setlength{\headheight}{13.6pt}
\newenvironment{amatrix}[1]{%
  \left(\begin{array}{@{}*{#1}{c}|c@{}}
}{%
  \end{array}\right)
}
\makeatletter
\renewcommand*\env@matrix[1][*\c@MaxMatrixCols c]{%
  \hskip -\arraycolsep
  \let\@ifnextchar\new@ifnextchar
  \array{#1}}
\makeatother
\newcommand\question[2]{\vspace{.25in}\hrule\textbf{#1: #2}\vspace{.5em}\hrule\vspace{.10in}}
\renewcommand\part[1]{\vspace{.10in}\textbf{(#1)}}
\pagestyle{fancyplain}
\lhead{\textbf{\NAME}}
\chead{\textbf{Assignment \HWNUM}}
\rhead{\textbf{\ANDREWID}}
\pgfplotsset{compat=1.18}
\begin{document}\raggedright
\newcommand\NAME{$1}  
\newcommand\ANDREWID{ID: 5548015}  
\newcommand\HWNUM{$2}    
$3
\end{document}
endsnippet

snippet bf "Bold Text" iA
\textbf{${1:text}}$0
endsnippet

snippet itc "Italic Text" iA
\textit{${1:text}}$0
endsnippet

context "math()"
snippet abs "Absolute Value" iA
\left|${1:${VISUAL}}\right|$0
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

snippet sec "Section" bA
\section{${1:Title}}
$0
endsnippet

snippet subsec "Subsection" bA
\subsection{${1:Title}}
$0
endsnippet

snippet citep "Citation" iA
\citep[${1:pageNo}]{${2:reference}}
$0
endsnippet

snippet def "definition environment" bA
\begin{defn}
$1
\end{defn}
endsnippet

snippet thm "theorem environment" bA
\begin{thm}
$1
\end{thm}
endsnippet

snippet prop "proposition environment" bA
\begin{prop}
$1
\end{prop}
endsnippet

snippet lem "lemma environment" bA
\begin{lem}
$1
\end{lem}
endsnippet

snippet rmk "remark environment" bA
\begin{rmk}
$1
\end{rmk}
endsnippet

snippet exmpl "example environment" bA
\begin{exmpl}
$1
\end{exmpl}
endsnippet

snippet proof "proof environment" bA
\begin{proof}
$1
\end{proof}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
$$
${1:${VISUAL}}
.$$ $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "
snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq 
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix}
$1 
\end{pmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" iA
\left\langle${1:${VISUAL}} \right\rangle$0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet _ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet oo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\mathbb{N}}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100

# Snippet for \mathbb
context "math()"
snippet mbb "Mathbb" iA
\mathbb{${1:${VISUAL}}}$0
endsnippet

# Snippet for \mathcal
context "math()"
snippet mcal "Mathcal" iA
\mathcal{${1:${VISUAL}}}$0
endsnippet

# Snippet for \mathfrak
context "math()"
snippet mfk "Mathfrak" iA
\mathfrak{${1:${VISUAL}}}$0
endsnippet

# Snippet for \mathbf
context "math()"
snippet mbf "Mathbf" iA
\mathbf{${1:${VISUAL}}}$0
endsnippet

priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet norm "norm" iA
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|sec|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet ~ "~" iA
\sim 
endsnippet

context "math()"
snippet set "set" wA
\\{$1\\} $0
endsnippet

snippet || "mid" iA
\mid 
endsnippet


context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet NN "n" iA
\mathbb{N}
endsnippet

snippet Ii "cap" iA
\cap 
endsnippet

snippet Uu "cup" iA
\cup 
endsnippet

snippet UU "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet II "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "emptyset" iA
\emptyset
endsnippet

snippet RR "real" iA
\mathbb{R}
endsnippet

snippet QQ "Q" iA
\mathbb{Q}
endsnippet

snippet ZZ "Z" iA
\mathbb{Z}
endsnippet

snippet <! "normal" iA
\trianglelefteq
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet " "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" wA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet HH "H" iA
\mathbb{H}
endsnippet

snippet DD "D" iA
\mathbb{D}
endsnippet

context "math()"
snippet par "partial" wA
\partial
endsnippet

context "math()"
snippet @a "alpha" iA
\alpha
endsnippet

context "math()"
snippet @b "beta" iA
\beta
endsnippet

context "math()"
snippet @g "gamma" iA
\gamma
endsnippet

context "math()"
snippet @G "Gamma" iA
\Gamma
endsnippet

context "math()"
snippet @d "delta" iA
\delta
endsnippet

context "math()"
snippet @D "Delta" iA
\Delta
endsnippet

context "math()"
snippet @e "epsilon" iA
\epsilon
endsnippet

context "math()"
snippet :e "varepsilon" iA
\varepsilon
endsnippet

context "math()"
snippet @z "zeta" iA
\zeta
endsnippet

context "math()"
snippet @t "theta" iA
\theta
endsnippet

context "math()"
snippet @T "Theta" iA
\Theta
endsnippet

context "math()"
snippet @k "kappa" iA
\kappa
endsnippet

context "math()"
snippet @l "lambda" iA
\lambda
endsnippet

context "math()"
snippet @L "Lambda" iA
\Lambda
endsnippet

context "math()"
snippet @s "sigma" iA
\sigma
endsnippet

context "math()"
snippet @S "Sigma" iA
\Sigma
endsnippet

context "math()"
snippet @o "omega" iA
\omega
endsnippet

context "math()"
snippet '(?<!\\)mu' "mu" wrA
\mu
endsnippet

context "math()"
snippet '(?<!\\)nu' "nu" wrA
\nu
endsnippet

context "math()"
snippet '(?<!\\)xi' "xi" wrA
\xi
endsnippet

context "math()"
snippet '(?<!\\)Xi' "Xi" wrA
\Xi
endsnippet

context "math()"
snippet '(?<!\\)Pi' "Pi" wrA
\Pi
endsnippet

context "math()"
snippet '(?<!\\)rho' "rho" wrA
\rho
endsnippet

context "math()"
snippet '(?<!\\)tau' "tau" wrA
\tau
endsnippet

context "math()"
snippet @p "phi" iA
\phi
endsnippet

context "math()"
snippet :p "varphi" iA
\varphi
endsnippet

context "math()"
snippet '(?<!\\)Phi' "Phi" wrA
\Phi
endsnippet

context "math()"
snippet '(?<!\\)chi' "chi" wrA
\chi
endsnippet

context "math()"
snippet '(?<!\\)psi' "psi" wrA
\psi
endsnippet

context "math()"
snippet '(?<!\\)Psi' "Psi" wrA
\Psi
endsnippet


# vim:ft=snippets
